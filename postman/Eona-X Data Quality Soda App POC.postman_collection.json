{
	"info": {
		"_postman_id": "ee13d9c0-87d5-48b5-8009-9bf78f0a1d88",
		"name": "Eona-X Data Quality Soda App POC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32248132"
	},
	"item": [
		{
			"name": "Get Variables",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/get/variables",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"get",
						"variables"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Soda Checks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/get/checks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"get",
						"checks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Variables (DATAtourisme)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "api:\n  apiName: \"datatourisme\"\n  url: \"https://www.data.gouv.fr/fr/datasets/r/56d437a7-eb0c-4c31-9138-539be94bc490\"\n  content-type: \"text/csv\"\n\npostgresql:\n  database: \"data_quality\"\n  table: \"soda_results\"\n  column: \"results\"\n  user: \"postgres\"\n  password: \"secret\"\n  host: \"db\"\n  port: \"5432\"\n\nbackend:\n  criteria: \"criteria_datatourisme_reg-pdl.json\"\n\nsoda:  \n  dataset_name: \"reg_pdl\"\n  data_source_name: \"datatourisme\"\n  scan_definition_name: \"niveau_basique\" \n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://10.1.2.182:5000/post/variables",
					"protocol": "http",
					"host": [
						"10",
						"1",
						"2",
						"182"
					],
					"port": "5000",
					"path": [
						"post",
						"variables"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Soda Checks (DATAtourisme)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "checks for reg_pdl:\n  - row_count:\n      fail: when = 0\n      name: Check if there are rows in the dataset.\n  - duplicate_count(nom):\n      warn: when > 0\n      fail: when >= 10\n      name: Check if there are duplicate POI names.\n  - missing_percent(geolocalisation):\n      warn: when > 25\n      fail: when > 50\n      name: Check if geolocalisation is missing.",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "http://10.1.2.182:5000/post/checks",
					"protocol": "http",
					"host": [
						"10",
						"1",
						"2",
						"182"
					],
					"port": "5000",
					"path": [
						"post",
						"checks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Variables (Apidae Cooking API)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "api:\n  apiName: \"apidae\"\n  url: \"https://api.apidae-tourisme.cooking/api/v002/recherche/list-objets-touristiques\"\n  projectId: \"3628\"\n  searchId: \"69700\"\n  count: \"20\"\n  apiKey: \"8uEnYKe1\"\n  typeObjet: \"RESTAURATION\"\n  content-type: \"application/json\"\n\npostgresql:\n  database: \"data_quality\"\n  table: \"soda_results\"\n  column: \"results\"\n  user: \"postgres\"\n  password: \"secret\"\n  host: \"db\"\n  port: \"5432\"\n\nbackend:\n  criteria: \"criteria_apidae_restauration.json\"\n\nsoda:\n  dataset_name: \"restauration\"\n  data_source_name: \"apidae\"\n  scan_definition_name: \"niveau_basique\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:5000/post/variables",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "5000",
					"path": [
						"post",
						"variables"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Soda Checks (Apidae Cooking API)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "checks for restauration:\n  - row_count:\n      fail: when = 0\n      name: Check if there are rows in the dataset.\n  - duplicate_count(nom):\n      warn: when > 0\n      fail: when >= 10\n      name: Check if there are duplicate POI names.\n  - missing_percent(geolocalisation):\n      warn: when > 3\n      fail: when > 25",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:5000/post/checks",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "5000",
					"path": [
						"post",
						"checks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Run a Soda Scan",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://10.1.2.182:5000/run/scan",
					"protocol": "http",
					"host": [
						"10",
						"1",
						"2",
						"182"
					],
					"port": "5000",
					"path": [
						"run",
						"scan"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Last Results",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{host}}:5000/get/results?count=1",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "5000",
					"path": [
						"get",
						"results"
					],
					"query": [
						{
							"key": "count",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}